% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/otvPlotsFunctions.R
\name{PlotHistOverTime}
\alias{PlotHistOverTime}
\title{Plot Histogram of Discrete Variable Over Time}
\usage{
PlotHistOverTime(dataFl, dateNm, dateGp, weightNm = NULL, myVar,
  newLevels = NULL, refactorInd = FALSE)
}
\arguments{
\item{dataFl}{Either the name of an object that can be converted using
as.data.table (e.g. a ' data frame) or a character string containing the name
of dataset that can be loaded using fread (e.g. a csv file). ' If dataset is
not in your working directory then \code{dataFl} must include (relative or 
absolute) path to file}

\item{dateNm}{Name of column containing date variable}

\item{dateGp}{Name of the variable the time series plots should be grouped
by. Options are NULL, "weeks", "months", "quarters", "years". See
data.table::IDate. If NULL \code{dateNm} will be used.}

\item{weightNm}{Name of variable containing row weights or NULL for no
weights (all rows recieve weight 1)}

\item{myVar}{Name of the variable to be plotted}

\item{newLevels}{An optional vector naming the categories of \code{myVar} in 
order of frequency}

\item{refactorInd}{Logical. Indicates whether discrete 
\code{myVar} should be converted to factor as plotting time. Doing so will 
ensure over time histogram plots are in the same order as other discrete 
plots, but will substantially increase processing time for large data sets}
}
\value{
A ggproto object with a histogram of \code{myVar} over time
}
\description{
Plot Histogram of Discrete Variable Over Time
}
\section{License}{

Copyright 2016 Capital One Services, LLC Licensed under the Apache License,
Version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the  License at
http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law
or agreed to in writing, software distributed under the License is 
distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY 
KIND, either express or implied. See the License for the specific language 
governing permissions and limitations under the License.
}
\examples{
data(bankData)
setDT(bankData)
bankData[, weight := rpois(.N, 5)]
bankData[, weight := weight/sum(weight)]
PrepData(bankData, dateNm = "date", dateGp = "months", dateGpBp = "quarters", 
         weightNm = "weight")
PlotHistOverTime(dataFl = bankData, dateNm = "date", dateGp = "months", weightNm = "weight", 
			myVar = "job", newLevels = NULL)

#--- newLevels can be precomputed
glbTotals <- bankData[, .(count = .N), by = "job"]
newLevels <- glbTotals[, job][order(glbTotals[, -count])]
PlotHistOverTime(dataFl = bankData, dateNm = "date", dateGp = "months", weightNm = NULL, 
				myVar = "job", newLevels = newLevels)

# If refactorInd = TRUE, then the input dataFl[[myVar]] will be updated to be a factor 
# with levels equal to newLevels, which will order the histogram by the global frequency
# of the categories of myVar. It can be very resource intensive for large files. 
PlotHistOverTime(dataFl = bankData, dateNm = "date", dateGp = "months", weightNm = NULL, 
				myVar = "job", newLevels = newLevels, refactorInd = TRUE)
}


% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/otvplots.R
\name{plotv}
\alias{plotv}
\title{Automated monitoring reports}
\usage{
plotv(dataFl, dateNm, labelFl = NULL, selectCols = NULL, dropCols = NULL,
  dateFt = "\%d\%h\%Y", dateGp = NULL, dateGpBp = NULL, weightNm = NULL,
  buildTm = NULL, highlightNms = NULL, skewOpt = NULL, kSample = 50000,
  outFl = "otvPlots.pdf", prepData = TRUE, varNms = NULL,
  fuzzyLabelFn = NULL, dropConstants = TRUE, sortVars = NULL,
  sortFn = NULL, kCategories = 9, ...)
}
\arguments{
\item{dataFl}{Either the name of an object that can be converted using
\code{\link[data.table]{as.data.table}} (e.g., a data frame), or a 
character string containing the name of dataset that can be loaded using 
\code{\link[data.table]{fread}} (e.g., a csv file), or a file path  of Rdata
file. If dataset is not in your working directory then \code{dataFl}
must include (relative or absolute) path to file.}

\item{dateNm}{Name of column containing \code{date} variable.}

\item{labelFl}{Either the path of a dataset (csv or Rdata file) containing
labels, an R object convertible to \code{data.table} (e.g. data frame) or 
\code{NULL}. If \code{NULL} no labels will be used. Label dataset must 
contain at least 2 columns: \code{varCol} (variable names) and 
\code{labelCol} (variable labels).}

\item{selectCols}{Either \code{NULL}, or a vector of names or indices of 
variables to read into memory -- must include \code{dateNm}, 
\code{weightNm} (if not \code{NULL}) and all variables to be plotted. If
both \code{selectCols} and \code{dropCols} are \code{NULL}, then all
variables will be read in.}

\item{dropCols}{Either \code{NULL}, or a vector of variables names or indices
of variables not to read into memory.}

\item{dateFt}{\code{\link{strptime}} format of date variable. Default is SAS
format \code{"\%d\%h\%Y"}. But input data with R date format 
\code{"\%Y-\%m-\%d"} will also be detected. Both of two formats can be
parsed automatically.}

\item{dateGp}{Name of the variable the time series plots should be grouped
by. Options are \code{NULL}, \code{"weeks"}, \code{"months"}, 
\code{"quarters"}, \code{"years"}. See \code{\link[data.table]{IDate}} for
details. If \code{NULL}, then \code{dateNm} will be used as \code{dateGp}.}

\item{dateGpBp}{Name of variable the boxplots should be grouped by. Same
options as \code{dateGp}. If \code{NULL}, then \code{dateGp} will be used.}

\item{weightNm}{Name of variable containing row weights, or \code{NULL} for 
no weights (all rows recieve weight 1).}

\item{buildTm}{Vector identify time period for ranking/anomaly detection
(most likely model build period). Allows for a subset of plotting time
period to be used for anomaly detection.
\itemize{
     \item Must be a vector of dates and must be inclusive i.e. buildTm[1]
       <= date <= buildTm[2] will define the time period.
     \item Must be either \code{NULL}, a vector of length 2, or a vector of 
       length 3. 
     \item If \code{NULL}, the entire dataset will be used for 
       ranking/anamoly detection. 
     \item If a vector of length 2, the format of the dates must be
       a character vector in default R date format (e.g. "2016-01-30"). 
     \item If a vector of length 3, the first two columns must contain dates 
       in any strptime format, while the 3rd column contains the strptime 
       format (see \code{\link{strptime}}). 
     \item The following are equivalent ways of selecting
       all of 2014:
     \itemize{
       \item \code{c("2014-01-01","2014-12-31")}
       \item \code{c("01JAN2014","31DEC2014", "\%d\%h\%Y")}
     }
}}

\item{highlightNms}{Either \code{NULL} or a character vector of variables to
recieve red label. Currently \code{NULL} means all variables will get a 
black legend. Ignored this argument if \code{labelFl == NULL}.}

\item{skewOpt}{Either a numeric constant or \code{NULL}. Default is 
\code{NULL} (no transformation). If numeric, say 5, then all box plots of
a variable whose skewness exceeds 5 will be on a log10 scale if possible.
Negative input of \code{skewOpt} will be converted to 3.}

\item{kSample}{Either \code{NULL} or an positive integer. If an integer, 
indicates the sample size for both drawing boxplots and ordering numerical
graphs by \eqn{R^2}. When the data is large, setting \code{kSample} to a 
reasonable value (default is 50K) dramatically improves processing speed. 
Therefore, for larger datasets (e.g. > 10 percent system memory), this
parameter should not be set to \code{NULL}, or boxplots may take a very
long time to render. This setting has no impact on the accuracy of time 
series plots on quantiles, mean, SD, and missing and zero rates.}

\item{outFl}{Name of output file (e.g., "otvPlots.pdf"). PDF will be
saved to your working directory unless a path is included in \code{outFl}
(e.g. "../plots/otvPlots.pdf").}

\item{prepData}{Logical, indicates if data should be run through the 
\code{\link{PrepData}} function. This should be set to \code{TRUE} unless the
\code{\link{PrepData}} fucntion has been applied to the input data 
\code{dataFl}. If this arugment is set to \code{FALSE}, then \code{dataFl} is 
usually must be a \code{data.table} containing variables \code{weightNm}, 
\code{dateNm}, \code{dateGp}, and \code{dateGpBp}.}

\item{varNms}{Either \code{NULL} or a vector of names or indices of variables
to be plotted. If \code{NULL}, will default to all columns which are not 
\code{dateNm} or \code{weightNm}. Can also be a vector of indices of the 
column names, after \code{dropCols} or \code{selectCols} have been applied,
if applicable, and not including \code{dateGp}, \code{dateGpBp} 
(which will be added to the \code{dataFl} by this function).}

\item{fuzzyLabelFn}{Either \code{NULL} or a function of 2 parameters: A label
file in the format of an output by \code{\link{PrepLabels}} and a string
giving a variable name. The function should return the label corresponding
to the variable given by the second parameter. This function should 
describe how fuzzy matching should be performed to find labels (see example
below). If \code{NULL}, only exact matches will be retuned.}

\item{dropConstants}{Logical indicates whether or not constant (all
duplicated or NA) variables should be dropped from \code{dataFl} prior to
plotting.}

\item{sortVars}{A pre-determined character vector of variable names, giving
the order in which variables should be plotted, or \code{NULL} to keep
original ordering except that numerical variables will be plotted before 
categorical and binary ones. \code{sortVars} should be \code{NULL} when 
the \code{sortFn} argument is used.}

\item{sortFn}{A sorting function which returns \code{sortVars} as an output. 
The function may take the following variables as input: \code{dataFl}, 
\code{dateNm}, \code{buildTm}, \code{weightNm}, \code{kSample}. Currently, 
the only build-in sorting function is \code{\link{OrderByR2}}, which sorts
numerical variables in the order of strength of linear association with date.}

\item{kCategories}{If a categorical variable has more than \code{kCategories},
trace plots of only the \code{kCategories} most prevalent categories are
plotted.}

\item{...}{Additional parameters to be passed to 
\code{\link[data.table]{fread}}.}
}
\value{
A pdf file of VLM report saved as \code{outFl}.
}
\description{
Prepares input dataset and labels, sorts variables according to either user 
input or correlation with time (among numerical variables only), 
and outputs the plots to pdf, with each page illustrating one variable.
}
\section{License}{
 Copyright 2016 Capital One Services, LLC Licensed under the
Apache License, Version 2.0 (the "License"); you may not use this file 
except in compliance with the License. You may obtain a copy of the License
at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable
law or agreed to in writing, software distributed under the License is
distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License.
}

\examples{
data(bankData)
setDT(bankData)
data(bankLabels)
setDT(bankLabels)
\dontrun{ 

PrepData(bankData, dateNm = "date", dateGp = "months", dateGpB = "quarters")
PrepLabels(bankLabels)

# PrepData should only need to be run once on a dataset, after that plotv 
# can be run with PrepData = FALSE 
plotv(dataFl = bankData, dateNm = "date", labelFl = bankLabels,
            dateGp = "months", dateGpBp = "quarters", outFl = "bank.pdf", 
            prepData = TRUE, kSample = NULL, kCategories = 12)
} 
# Different values of kSample can affect the appearance of boxplots (and 
# possibly the order of variable output if sortVars = 'R2' is used), but does 
# not affect the time series plots, which always use all of the data 
\dontrun{

plotv(dataFl = bankData, dateNm = "date", labelFl = bankLabels,
            dateGp = "months", dateGpBp = "quarters", outFl = "bank.pdf", 
            prepData = FALSE, kSample = 500)
}

#  If weights are provided they will be used in all statistical calculations
\dontrun{bankData[, weight := rnorm(.N, 1, .1)]
plotv(dataFl = bankData, dateNm = "date", labelFl = bankLabels,
            dateGp = "months", dateGpBp = "quarters", weightNm = "weight", 
            outFl = "bank.pdf", prepData = FALSE, kSample = NULL)
}
# plotv is designed for non-interactive use, and both dataFl and
# labelFl could be passed as strings giving the location of the datasets on 
# disk, as long as they are able to be parsed by fread. Since the example 
# datasets bankData and bankLabels are saved as rda files, for this example 
# we will need to read them into memory using utils::data then convert 
# to data.table
data(bankData)
setDT(bankData)
data(bankLabels) 
setDT(bankLabels)
\dontrun{ 
plotv(dataFl = bankData, dateNm = "date", labelFl = bankLabels, 
            dateGp = "months", dateGpBp="quarters", weightNm = NULL, 
            outFl = "bank.pdf", prepData = TRUE, kSample = NULL)
}
# We can pass a vector of variable names to customize plotting order using
# sortVars, but we must exclude the "date" column from sortVars or the 
# function will stop with a message warning us it cannot plot dates
\dontrun{ 
sortVars = sort(bankLabels[varCol!="date", varCol])
plotv(dataFl = bankData, dateNm = "date", labelFl = bankLabels, 
            dateGp = "months", dateGpBp = "quarters", weightNm = NULL, 
            outFl = "bank.pdf", prepData = FALSE, kSample = NULL, 
            sortVars = sortVars, kCategories = 9)
} 
# We can test that the function is working with a specific variable using 
# the varNms parameter
plotv(dataFl = bankData, dateNm = "date", labelFl = bankLabels, 
            dateGp = "months", dateGpBp = "quarters", weightNm = NULL, 
            outFl = "bank.pdf", prepData = TRUE, kSample = NULL, 
            varNms = "age", sortVars = NULL)

# See otvPlots::PlotVar for examples in interactive use, 
# including use of the fuzzyLabels parameter

}
\seealso{
\code{\link[otvPlots]{PrepData}}

\code{\link[otvPlots]{PrepLabels}}

\code{\link[otvPlots]{OrderByR2}}

\code{\link[otvPlots]{PrintPlots}}

\code{\link[base]{strptime}}

\code{\link[data.table]{IDate}}
}

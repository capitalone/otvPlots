% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/otvPlotsFunctions.R
\name{PlotWrapper}
\alias{PlotWrapper}
\title{Automated monitoring reports}
\usage{
PlotWrapper(dataFl, dateNm, labelFl = NULL, selectCols = NULL,
  dropCols = NULL, dateFt = "\%d\%h\%Y", dateGp = NULL, dateGpBp = NULL,
  weightNm = NULL, buildTm = NULL, highlightNms = NULL, skewOpt = NULL,
  kSample = 50000, outFl = "otvPlots.pdf", prepData = TRUE,
  varNms = NULL, fuzzyLabelFn = NULL, dropConstants = TRUE,
  sortVars = NULL, kCategories = 3, refactorInd = FALSE, ...)
}
\arguments{
\item{dataFl}{Either the name of an object that can be converted using
as.data.table (e.g. a ' data frame) or a character string containing the name
of dataset that can be loaded using fread (e.g. a csv file). ' If dataset is
not in your working directory then \code{dataFl} must include (relative or 
absolute) path to file}

\item{dateNm}{Name of column containing date variable}

\item{labelFl}{Either the name (and possibly path) of a dataset containing
labels, an R object convertible to data.table (eg data frame) or NULL. If
name is given, if the dataset is not in your working directory then
\code{labelFl} must include (relative or absolute) path to file. If NULL no
labels will be used. Label dataset must contain at least 2 columns:
variable names and variable label.}

\item{selectCols}{Either NULL, or a vector contaning names or indices of
variables to read into memory -- must include \code{dateNm},
\code{weightNm} (if not null) and all variables to be plotted. If both
selectCols and dropCols are null, then all variables will be read in. Only
used when dataFl is a string constant, because selectCols is passed as a
parameter to fread. When dataFl is already a dataset in memory, use varNms
to indicate the column names to be plotted.}

\item{dropCols}{Either NULL or a vector of variables not to read into memory.
This parameter is passed directly to fread (see selectCols)}

\item{dateFt}{strptime format of date variable. Default is SAS format. See
?strptime}

\item{dateGp}{Name of the variable the time series plots should be grouped
by. Options are NULL, "weeks", "months", "quarters", "years". See
data.table::IDate. If NULL \code{dateNm} will be used.}

\item{dateGpBp}{Name of variable the boxplots should be grouped by. Same
options as \code{dateGp}. If NULL \code{dateGp} will be used.}

\item{weightNm}{Name of variable containing row weights or NULL for no
weights (all rows recieve weight 1)}

\item{buildTm}{Vector identify time period for ranking/anomaly detection
(most likely model build period). Allows for a subset of plotting time
period to be used for anomaly detection.
\itemize{
     \item Must be a vector of dates and must be inclusive i.e. buildTm[1]
       <= date <= buildTm[2] will define the time period.
     \item Must be either NULL, a vector of length 2, or a vector of length
       3. 
     \item If NULL, entire dataset will be used for ranking/anamoly
       detection. 
     \item If a length 2 vector, the format of the dates must be
       a character vector in default R date format (e.g. "2016-01-30"). 
     \item If a length 3 vector, the first two columns must contain dates 
       in any strptime format, while the 3rd column contains the strptime 
       format (see \code{\link{strptime}}). 
     \item The following are equivalent ways of selecting
       all of 2014:
     \itemize{
      \item \code{c("2014-01-01","2014-12-31")}
         \item \code{c("01JAN2014","31DEC2014", "\%d\%h\%Y")}
        }
}}

\item{highlightNms}{Either NULL or a character vector of variables to recieve
red label. Currently NULL means all
variables will get a black legend. Ignored if labelFl = NULL.}

\item{skewOpt}{Either numeric constant or NULL. If numeric, say 5, the box
plots of variables whose skew exceeds 5 will be on a log10 scale if
possible. If negative, 3 will be used as the cutoff. Default is NULL (no 
transformation)}

\item{kSample}{Either NULL or integer. If a number, indicates the sample size
for both drawing boxplots and ordering numerical graphs by R2. For large
datasets, setting this to a reasonable (say 50K) value dramatically
increases processing speed. In larger datasets (e.g. > 10 percent system
memory), this parameter should not be set to NULL, or boxplots may take a
very long time to render. This setting has no impact on the accuracy of
time series plots.}

\item{outFl}{Name of output file (by default "otvPlots.pdf"). PDF will be
saved to your working directory unless path is included in \code{outFl}
(e.g. "../plots/otvPlots.pdf")}

\item{prepData}{logical. Indicates if data should be run through PrepData 
function. If FALSE, dataFl must be a data.table containing variables 
\code{weightNm, dateNm, dateGp} and \code{dateGpBp} (allows the user to use
arbitrary groupings of data on the x-axis)}

\item{varNms}{Either NULL or a vector of column names to be plotted. If null,
will default to all columns which are not \code{dateNm} or \code{weightNm}.
Can also be a vector of indices of the column names, after dropCols or
selectCols have been applied, if applicable, and not including dateGp,
dateGpBp (which will be added to the data.table)}

\item{fuzzyLabelFn}{Either NULL or a function of 2 parameters: A label file 
in the format output by PrepLabels and a string giving a variable name. The
function should return the label corresponding to the variable given by the
second parameter. This function should describe how fuzzy matching should be
performed to find labels (see example below). If NULL, only exact matches 
will be retuned.}

\item{dropConstants}{logical Indicates whether or not constant (all
duplicated or NA) variables should be dropped from dataFl prior to plotting}

\item{sortVars}{Either a vector of variable names giving the order in which
variables should be plotted, "R2" in order to sort plots by strength of
associate with date (see \code{\link[otvPlots]{OrderByR2}}), or NULL to keep 
original ordering, with numeric variables ahead of categorical}

\item{kCategories}{Number of categories to plot in over time
rate chart for categorical data -- the K most numerous categories in the 
dataset will be plotted. Default is 3.}

\item{refactorInd}{Logical. Indicates whether discrete 
\code{myVar} should be converted to factor as plotting time. Doing so will 
ensure over time histogram plots are in the same order as other discrete 
plots, but will substantially increase processing time for large data sets}

\item{...}{Additional parameters to be passed to fread}
}
\value{
A VLM report saved as \code{outFl}
}
\description{
Prepares input dataset and labels, sorts variables according to either user 
input or correlation with time, and outputs the sorted plots to pdf
}
\section{License}{
 Copyright 2016 Capital One Services, LLC Licensed under the
Apache License, Version 2.0 (the "License"); you may not use this file 
except in compliance with the License. You may obtain a copy of the License
at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable
law or agreed to in writing, software distributed under the License is
distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License.
}
\examples{
data(bankData)
setDT(bankData)
data(bankLabels)
setDT(bankLabels)
PrepData(bankData, dateNm = "date", dateGp = "months", dateGpB = "quarters")
PrepLabels(bankLabels)

# PrepData should only be run once on a dataset, after that PlotWrapper 
# should be run with PrepData = FALSE 
PlotWrapper(dataFl = bankData, dateNm = "date", labelFl = bankLabels,
            dateGp = "months", dateGpBp = "quarters", outFl = "bank.pdf", 
            prepData = FALSE, kSample = NULL, kCategories = 3)

# Different values of kSample can affect the appearance of boxplots (and 
# possibly the order of variable output if sortVars = 'R2' is used), but does 
# not affect the time series plots, which always use all of the data 
PlotWrapper(dataFl = bankData, dateNm = "date", labelFl = bankLabels,
            dateGp = "months", dateGpBp = "quarters", outFl = "bank.pdf", 
            prepData = FALSE, kSample = 500)

#  If weights are provided they will be used in all statistical calculations
bankData[, weight := rnorm(.N, 1, .1)]
PlotWrapper(dataFl = bankData, dateNm = "date", labelFl = bankLabels,
            dateGp = "months", dateGpBp = "quarters", weightNm = "weight", 
            outFl = "bank.pdf", prepData = FALSE, kSample = NULL)

# PlotWrapper is designed for non-interactive use, and both dataFl and
# labelFl could be passed as strings giving the location of the datasets on 
# disk, as long as they are able to be parsed by fread. Since the example 
# datasets bankData and bankLabels are saved as rda files, for this example 
# we will need to read them into memory using utils::data then convert 
# to data.table
data(bankData)
setDT(bankData)
data(bankLabels) 
setDT(bankLabels)
PlotWrapper(dataFl = bankData, dateNm = "date", labelFl = bankLabels, 
            dateGp = "months", dateGpBp="quarters", weightNm = NULL, 
            outFl = "bank.pdf", prepData = TRUE, kSample = NULL)

# We can pass a vector of variable names to customize plotting order using
# sortVars, but we must exclude the "date" column from sortVars or the 
# function will stop with a message warning us it cannot plot dates
sortVars = sort(bankLabels[varCol!="date", varCol])
PlotWrapper(dataFl = bankData, dateNm = "date", labelFl = bankLabels, 
            dateGp = "months", dateGpBp = "quarters", weightNm = NULL, 
            outFl = "bank.pdf", prepData = FALSE, kSample = NULL, 
            sortVars = sortVars, kCategories = 3, refactorInd = TRUE)

# We can test that the function is working with a specific variable using 
# the varNms parameter
PlotWrapper(dataFl = bankData, dateNm = "date", labelFl = bankLabels, 
            dateGp = "months", dateGpBp = "quarters", weightNm = NULL, 
            outFl = "bank.pdf", prepData = FALSE, kSample = NULL, 
            varNms = "age", sortVars = NULL)

# See otvPlots::PlotVar for examples in interactive use, 
# including use of the fuzzyLabels parameter

}
\seealso{
\code{\link[otvPlots]{PrepData}}

\code{\link[otvPlots]{PrepLabels}}

\code{\link[otvPlots]{OrderByR2}}

\code{\link[otvPlots]{PrintPlots}}

\code{\link[base]{strptime}}

\code{\link[data.table]{IDate}}
}

